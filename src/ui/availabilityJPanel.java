/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.CarHistory;

/**
 *
 * @author jharnadoda
 */
public class availabilityJPanel extends javax.swing.JPanel {

    CarHistory history;
    private Car c;
    private String cnumber;
    
    
    public availabilityJPanel(CarHistory history) {
        initComponents();
        this.history=history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_availability = new javax.swing.JTable();
        button_availability = new javax.swing.JButton();
        text_availability = new javax.swing.JTextField();
        checkbox_availability = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search by Availability");

        table_availability.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No", "Company", "Min Seats", "Max Seats", "Manufacturing Year", "Model No", "City", "Maintenance Certificate", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_availability);

        button_availability.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        button_availability.setText("Search Availability");
        button_availability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_availabilityActionPerformed(evt);
            }
        });

        text_availability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_availabilityActionPerformed(evt);
            }
        });

        checkbox_availability.setText("Available");
        checkbox_availability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_availabilityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(checkbox_availability)
                        .addGap(18, 18, 18)
                        .addComponent(text_availability, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(314, 314, 314)
                .addComponent(button_availability, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkbox_availability)
                    .addComponent(text_availability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(button_availability)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(241, 241, 241))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void button_availabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_availabilityActionPerformed
        // TODO add your handling code here:
      
       

        for (Car c : history.getHistory())
        {
            Object data[] = new Object[9];

            
            if(c.getAvailability().equalsIgnoreCase("Available"))
            {
              
     
             data[0] = c.getSerial_no();
             data[1] = c.getCompany();
             data[2] = c.getMin_seats();
             data[3] = c.getMax_seats();
             data[4] = c.getManufacturing_year();
             data[5] = c.getModel_no();
             data[6] = c.getCity();
             data[7] = c.getMaintenance_certi();
             data[8] = c.getAvailability();
           
                DefaultTableModel model = (DefaultTableModel)table_availability.getModel();
                model.addRow(data);
            }
            
        }

    }//GEN-LAST:event_button_availabilityActionPerformed

    private void text_availabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_availabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_availabilityActionPerformed

    private void checkbox_availabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_availabilityActionPerformed
        // TODO add your handling code here:
        text_availability.setText(checkbox_availability.getText());
    }//GEN-LAST:event_checkbox_availabilityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_availability;
    private javax.swing.JCheckBox checkbox_availability;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_availability;
    private javax.swing.JTextField text_availability;
    // End of variables declaration//GEN-END:variables
}
