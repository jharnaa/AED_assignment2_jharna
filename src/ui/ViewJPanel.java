/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.sql.Time;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.CarHistory;

/**
 *
 * @author jharnadoda
 */
public class ViewJPanel extends javax.swing.JPanel {
    CarHistory history;
    

    public ViewJPanel(CarHistory history) {
        initComponents();
        
        this.history=history;
        populateTable();
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_View = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_view = new javax.swing.JTable();
        button_view = new javax.swing.JButton();
        button_delete = new javax.swing.JButton();
        label_company = new javax.swing.JLabel();
        txt_min_seats = new javax.swing.JTextField();
        label_manufacturing_year = new javax.swing.JLabel();
        txt_max_seats = new javax.swing.JTextField();
        label_min_seats = new javax.swing.JLabel();
        txt_serial_no = new javax.swing.JTextField();
        label_max_seats = new javax.swing.JLabel();
        txt_model_no = new javax.swing.JTextField();
        label_serial_no = new javax.swing.JLabel();
        txt_city = new javax.swing.JTextField();
        label_model_no = new javax.swing.JLabel();
        label_city = new javax.swing.JLabel();
        label_maintenence_certi = new javax.swing.JLabel();
        label_availability = new javax.swing.JLabel();
        txt_company = new javax.swing.JTextField();
        txt_manufacturing_year = new javax.swing.JTextField();
        txt_maintenance_certi = new javax.swing.JTextField();
        txt_availability = new javax.swing.JTextField();
        button_update = new javax.swing.JButton();
        label_company1 = new javax.swing.JLabel();
        txt_timestamp = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 153, 153));

        label_View.setFont(new java.awt.Font("Menlo", 0, 24)); // NOI18N
        label_View.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_View.setText("View");

        table_view.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Serial No", "Company", "Min Seats", "Max Seats", "Manufacturing Year", "Model No", "City", "Maintenance Certificate", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_view);

        button_view.setText("View");
        button_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_viewActionPerformed(evt);
            }
        });

        button_delete.setText("Delete");
        button_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_deleteActionPerformed(evt);
            }
        });

        label_company.setText("Company");

        txt_min_seats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_min_seatsActionPerformed(evt);
            }
        });

        label_manufacturing_year.setText("Manufacturing Year");

        txt_max_seats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_max_seatsActionPerformed(evt);
            }
        });

        label_min_seats.setText("Min. Seats");

        txt_serial_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_serial_noActionPerformed(evt);
            }
        });

        label_max_seats.setText("Max. Seats");

        txt_model_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_model_noActionPerformed(evt);
            }
        });

        label_serial_no.setText("Serial No");

        txt_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cityActionPerformed(evt);
            }
        });

        label_model_no.setText("Model No");

        label_city.setText("City");

        label_maintenence_certi.setText("Maintenance Certificate");

        label_availability.setText("Availability");

        txt_company.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_companyActionPerformed(evt);
            }
        });

        txt_manufacturing_year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_manufacturing_yearActionPerformed(evt);
            }
        });

        txt_maintenance_certi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_maintenance_certiActionPerformed(evt);
            }
        });

        txt_availability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_availabilityActionPerformed(evt);
            }
        });

        button_update.setText("Update");
        button_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_updateActionPerformed(evt);
            }
        });

        label_company1.setText("Last Modified Date");

        txt_timestamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_timestampActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label_View, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label_company, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(108, 108, 108)
                                .addComponent(txt_company, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label_manufacturing_year, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label_min_seats, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label_max_seats, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label_serial_no, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label_model_no, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label_city, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(label_availability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(label_maintenence_certi)))
                                .addGap(108, 108, 108)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_manufacturing_year, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(txt_min_seats)
                                    .addComponent(txt_max_seats)
                                    .addComponent(txt_serial_no)
                                    .addComponent(txt_model_no)
                                    .addComponent(txt_city)
                                    .addComponent(txt_maintenance_certi)
                                    .addComponent(txt_availability))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(label_company1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_timestamp, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(button_view, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(button_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(button_update, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_View, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_manufacturing_year, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_view, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_company, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_company, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label_manufacturing_year, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_min_seats, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_min_seats, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_update, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_company1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_timestamp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_max_seats, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_max_seats, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_serial_no, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_serial_no, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_model_no, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_model_no, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_city, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_maintenance_certi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_maintenence_certi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_availability, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_availability, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void button_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_deleteActionPerformed
       int selectedRow = table_view.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)table_view.getModel();
        if (selectedRow >= 0)
        {
            int confirmation = JOptionPane.showConfirmDialog(null, "Are you sure to delete the car details");
            if (confirmation == 0)
            {
               
                model.removeRow(table_view.getSelectedRow());
                txt_company.setText("");
                txt_manufacturing_year.setText("");
                txt_min_seats.setText("");
                txt_max_seats.setText("");
                txt_serial_no.setText("");
                txt_model_no.setText("");
                txt_city.setText("");
                txt_maintenance_certi.setText("");
                txt_availability.setText("");
                
                
            }
            JOptionPane.showMessageDialog(null,"Car info has been deleted");
        }
        else 
            JOptionPane.showMessageDialog(null,"Please select a row from the table"); 
        
        
        
        
        
        
    }//GEN-LAST:event_button_deleteActionPerformed

    private void txt_min_seatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_min_seatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_min_seatsActionPerformed

    private void txt_max_seatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_max_seatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_max_seatsActionPerformed

    private void txt_serial_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_serial_noActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_serial_noActionPerformed

    private void txt_model_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_model_noActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_model_noActionPerformed

    private void txt_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cityActionPerformed

    private void txt_companyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_companyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_companyActionPerformed

    private void txt_manufacturing_yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_manufacturing_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_manufacturing_yearActionPerformed

    private void button_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_viewActionPerformed
        // TODO add your handling code here:
         int selectedRow = table_view.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)table_view.getModel();
        txt_serial_no.setText(model.getValueAt(selectedRow,0).toString());
        txt_company.setText(model.getValueAt(selectedRow,1).toString());
        txt_manufacturing_year.setText(model.getValueAt(selectedRow, 4).toString());
        txt_min_seats.setText(model.getValueAt(selectedRow,2).toString());
        txt_max_seats.setText(model.getValueAt(selectedRow,3).toString());
        
        txt_model_no.setText(model.getValueAt(selectedRow,5).toString());
        txt_city.setText(model.getValueAt(selectedRow,6).toString());
        txt_maintenance_certi.setText(model.getValueAt(selectedRow,7).toString());
        txt_availability.setText(model.getValueAt(selectedRow,8).toString());
        
        
        
        
    }//GEN-LAST:event_button_viewActionPerformed

    private void txt_maintenance_certiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_maintenance_certiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_maintenance_certiActionPerformed

    private void txt_availabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_availabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_availabilityActionPerformed

    private void button_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_updateActionPerformed
        // TODO add your handling code here:
        int i = table_view.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)table_view.getModel();
        if(i >= 0)
        {
        {
            model.setValueAt(txt_serial_no.getText(), i, 0);
            model.setValueAt(txt_company.getText(), i, 1);
            model.setValueAt(txt_manufacturing_year.getText(), i, 2);
            model.setValueAt(txt_min_seats.getText(), i, 3);
            model.setValueAt(txt_max_seats.getText(), i, 4);
            model.setValueAt(txt_model_no.getText(), i,5);
            model.setValueAt(txt_city.getText(), i, 6);
            model.setValueAt(txt_maintenance_certi.getText(), i, 7);
            model.setValueAt(txt_availability.getText(), i, 8);
            
            
            
            JOptionPane.showMessageDialog(null,"Data Updated Successfully");
            txt_company.setText("");
                txt_manufacturing_year.setText("");
                txt_min_seats.setText("");
                txt_max_seats.setText("");
                txt_serial_no.setText("");
                txt_model_no.setText("");
                txt_city.setText("");
                txt_maintenance_certi.setText("");
                txt_availability.setText("");
            Timestamp timestamp=new Timestamp(System.currentTimeMillis());
        }
        //DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        //LocalDate localDate = LocalDate.now();
        //String edate = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss").format(localDate);
        //SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss");
       Date d = new Date();
       DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
       //System.out.println(df.format(d));
        Date date1;
        Time time1;
        
        txt_timestamp.setText(df.format(d));
        
        //date1 = sdf.parse(edate);
        //time1 = (Time) s.parse(time);
        
        //JOptionPane.showMessageDialog(null, "Latest Update Date"+ date1);
       // DatejTextField.setText(df.format(d));
        //TimejTextField.setText(time);
        
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select the row to update from the table.");
        }
                                    
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_button_updateActionPerformed

    private void txt_timestampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_timestampActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_timestampActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_delete;
    private javax.swing.JButton button_update;
    private javax.swing.JButton button_view;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_View;
    private javax.swing.JLabel label_availability;
    private javax.swing.JLabel label_city;
    private javax.swing.JLabel label_company;
    private javax.swing.JLabel label_company1;
    private javax.swing.JLabel label_maintenence_certi;
    private javax.swing.JLabel label_manufacturing_year;
    private javax.swing.JLabel label_max_seats;
    private javax.swing.JLabel label_min_seats;
    private javax.swing.JLabel label_model_no;
    private javax.swing.JLabel label_serial_no;
    private javax.swing.JTable table_view;
    private javax.swing.JTextField txt_availability;
    private javax.swing.JTextField txt_city;
    private javax.swing.JTextField txt_company;
    private javax.swing.JTextField txt_maintenance_certi;
    private javax.swing.JTextField txt_manufacturing_year;
    private javax.swing.JTextField txt_max_seats;
    private javax.swing.JTextField txt_min_seats;
    private javax.swing.JTextField txt_model_no;
    private javax.swing.JTextField txt_serial_no;
    private javax.swing.JTextField txt_timestamp;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
       DefaultTableModel model = (DefaultTableModel)table_view.getModel() ;
       model.setRowCount(0);
        
    for(Car c : history.getHistory()){
        Object data[] = new Object[9];
             data[0] = c.getSerial_no();
             data[1] = c.getCompany();
             data[2] = c.getMin_seats();
             data[3] = c.getMax_seats();
             data[4] = c.getManufacturing_year();
             data[5] = c.getModel_no();
             data[6] = c.getCity();
             data[7] = c.getMaintenance_certi();
             data[8] = c.getAvailability();
            
          
             
             model.addRow(data);
        
        
        
        
        
        
        }
        
        
    }
}
